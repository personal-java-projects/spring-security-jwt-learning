server:
  port: 1112
  servlet:
    session:
      cookie:
        name: client1

spring:
  main:
    allow-circular-references: true
    allow-bean-definition-overriding: true
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/security?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: root

# 配置单点登录相关信息
security:
  oauth2:
    client:
      client-secret: 123456
      client-id: client4
      user-authorization-uri: http://localhost:8001/author/oauth/authorize
      access-token-uri: http://localhost:8001/author/oauth/token
      scope: profile,message.read
      # 支持此处配置重定向地址，为true时，pre-established-redirect-uri不生效
      use-current-uri: false
#      # 这里必须要回到客户端的登录地址，否则客户端无法校验是否登录成功，导致客户端实际并没有登录成功
      pre-established-redirect-uri: http://localhost:1112/login
#      registered-redirect-uri:
    resource:
      user-info-uri: http://localhost:8002/api/hello
      jwt:
        key-uri: http://localhost:8001/author/oauth/token_key
        key-value: test-secret

mybatis:
  # mapper ??
  mapper-locations: classpath:mapper/*.xml
  configuration:
    cache-enabled: true
    # ??
    map-underscore-to-camel-case: true
    # ?? sql
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

# redis参数
redis:
  # Redis 数据库服务器地址
  host: localhost
  # Redis 数据库索引（默认为 0）
  database: 0
  # Redis 服务器连接端口
  port: 6379
  # 数据库密码
  password:
  # 连接池配置
  lettuce:
    # 连接池中的最小空闲连接，默认 0
    min-idle: 0
    # 连接池中的最大空闲连接，默认 8
    max-idle: 8
    # 连接池最大阻塞等待时间（使用负值表示没有限制），默认 -1ms
    max-wait: -1
    # 连接池最大连接数（使用负值表示没有限制），默认 8
    max-active: 8
    # 连接超时时间
    timeout: 5000
    # 在关闭客户端连接之前等待任务处理完成的最长时间，在这之后，无论任务是否执行完成，都会被执行器关闭，默认100ms
    shutdown-timeout: 100
